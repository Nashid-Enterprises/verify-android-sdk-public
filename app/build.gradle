plugins {
    id 'com.android.application'
    id 'maven-publish'
//    id 'org.jetbrains.kotlin.android'
}
//apply plugin: 'kotlin-android'
//apply plugin: 'kotlin-android-extensions'
//apply plugin: 'kotlin-kapt'
android {
    compileSdk 33

    defaultConfig {
        applicationId "com.kyc.nashidIDV"
        minSdk 21
        targetSdk 33
        versionCode 18
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    dataBinding {
        enabled = true
    }
    flavorDimensions "default"
    productFlavors{
        dev{
            manifestPlaceholders = [appLabel:"NashidIDV"]
            applicationId "com.kyc.nashidIDV.demo" // Change this line
        }
        prod{
            manifestPlaceholders = [appLabel:"NashidIDV"]
            applicationId "com.kyc.nashidIDV.demo" // Change this line
        }
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
//    implementation project(path: ':IDV')
//    implementation 'com.kyc.nashidmrz:IDV:1.0'
//    useing before adding gradle maven
//    implementation 'com.kyc.nashidmrz:IDV:1.1'
//    implementation ('com.github.Nashident:IDV:1.0.1')  {
//        exclude group: 'org.bouncycastle', module:'bcprov-jdk15on'
//    }
//    implementation 'com.kyc.nashidmrz:idv:0.1'
//    implementation 'com.google.android.gms:play-services:12.0.1'
//    implementation 'com.intuit.sdp:sdp-android:1.1.1'
//    implementation 'com.intuit.ssp:ssp-android:1.1.1'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

}

def githubProperties = new Properties()
githubProperties.load(new FileInputStream(rootProject.file("github.properties")))

def getVersionName = { ->
    return "1.0"
}

def getArtifactId = { ->
    return "idv"
}

def getGroupId = { ->
    return "com.nashid.verifysdk"
}

publishing {
    publications {
        bar(MavenPublication) {
            groupId getGroupId() // Replace with group ID
            artifactId getArtifactId()
            version getVersionName()
            artifact("$buildDir/outputs/aar/${getArtifactId()}-release.aar")
            pom.withXml {
                final dependenciesNode = asNode().appendNode('dependencies')
                ext.addDependency = { Dependency dep, String scope ->
                    if (dep.group == null || dep.version == null || dep.name == null || dep.name == "unspecified")
                        return
                    final dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', dep.group)
                    dependencyNode.appendNode('artifactId', dep.name)
                    dependencyNode.appendNode('version', dep.version)
                    dependencyNode.appendNode('scope', scope)
                    if (!dep.transitive) {
                        final exclusionNode = dependencyNode.appendNode('exclusions').appendNode('exclusion')
                        exclusionNode.appendNode('groupId', '*')
                        exclusionNode.appendNode('artifactId', '*')
                    } else if (!dep.properties.excludeRules.empty) {
                        final exclusionNode = dependencyNode.appendNode('exclusions').appendNode('exclusion')
                        dep.properties.excludeRules.each { ExcludeRule rule ->
                            exclusionNode.appendNode('groupId', rule.group ?: '*')
                            exclusionNode.appendNode('artifactId', rule.module ?: '*')
                        }
                    }
                }
//                configurations.compile.getDependencies().each { dep -> addDependency(dep, "compile") }
                configurations.api.getDependencies().each { dep -> addDependency(dep, "compile") }
                configurations.implementation.getDependencies().each { dep -> addDependency(dep, "runtime") }
            }
        }

    }

    repositories {
        maven {
            name = "GitHubPackages"
//            *//** Configure path of your package repository on Github
//             *  Replace GITHUB_USERID with your/organisation Github userID and REPOSITORY with the repository name on GitHub
//             *//*
            url = uri("https://maven.pkg.github.com/Nashid-Enterprises/verify-android-sdk")

            credentials {
//                *//**Create github.properties in root project folder file with gpr.usr=GITHUB_USER_ID  & gpr.key=PERSONAL_ACCESS_TOKEN**//*
                username = githubProperties['gpr.usr'] ?: System.getenv("GPR_USER")
                password = githubProperties['gpr.key'] ?: System.getenv("GPR_API_KEY")
            }
        }
    }
}